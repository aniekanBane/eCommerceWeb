# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

name: ecommerceweb

services:
  ecommerceweb-webapp:
    image: ecommerceweb-webapp:dev
    container_name: ecommerceweb-webapp
    build:
      context: .
      dockerfile: src/Presentation/WebApp/Dockerfile
      args:
        - configuration=Debug
      target: dev
    ports:
      - 6200:8080
      - 6217:8443
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTPS_PORTS=8443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${DEV_CERT_PASSWD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_DATAPROTECTION_CERTIFICATE=/data-protection/cert.pem
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
      - ~/.aspnet/https:/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
    depends_on:
      postgres-db:
        condition: service_healthy
      ecommerceweb-redis:
        condition: service_started

  ecommerceweb-public-api:
    image: ecommerceweb-public-api:dev
    container_name: ecommerceweb-public-api
    build:
      context: .
      dockerfile: src/Presentation/PublicApi/Dockerfile
      args:
        - configuration=Debug
      target: dev
    ports:
      - 5200:8080
      - 5217:8443
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTPS_PORTS=8443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${DEV_CERT_PASSWD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
      - ~/.aspnet/https:/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
    depends_on:
      postgres-db:
        condition: service_healthy
      azurite-blob:
        condition: service_started

  postgres-db:
    image: postgres:16.2-alpine3.19
    container_name: ecommerceweb-db
    restart: always
    ports:
      - 56791:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_DEFAULT_PASSWD}
    volumes:
      - ecommerceweb-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 15s
      retries: 5

  ecommerceweb-redis:
    image: redis/redis-stack:latest
    container_name: ecommerceweb-redis-cache
    ports:
      - 11001:6379
      - 13333:8001
    environment:
      - REDIS_ARGS=--save 60 100 --appendonly yes
    volumes:
      - ecommerceweb-redis-data:/data

  azurite-blob:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: ecommerceweb-blob-storage
    ports:
      - 10000:10000
    volumes:
      - ecommerceweb-blob-data:/data
    command: "azurite-blob --blobHost 0.0.0.0 -l /data"

networks:
  default:
    name: ecommerceweb-net

volumes:
  ecommerceweb-redis-data:
    name: ecommerceweb-redis-data
  ecommerceweb-db-data:
    name: ecommerceweb-db-data
  ecommerceweb-blob-data:
    name: ecommerceweb-blob-data
